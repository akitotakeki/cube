I0620 14:20:45.663259  5870 caffe.cpp:178] Use CPU.
E0620 14:20:45.673852  5870 common.cpp:113] Cannot create Cublas handle. Cublas won't be available.
E0620 14:20:45.682942  5870 common.cpp:120] Cannot create Curand generator. Curand won't be available.
I0620 14:20:45.683053  5870 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 1000
base_lr: 0.1
display: 200
max_iter: 54000
lr_policy: "multistep"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0001
snapshot: 6000
snapshot_prefix: "snapshots/cube_1_2_eltwise_add"
solver_mode: CPU
net: "./cube_1_2_eltwise_train_test.prototxt"
stepvalue: 48000
I0620 14:20:45.683266  5870 solver.cpp:91] Creating training net from net file: ./cube_1_2_eltwise_train_test.prototxt
I0620 14:20:45.688226  5870 net.cpp:313] The NetState phase (0) differed from the phase (1) specified by a rule in layer resnet
I0620 14:20:45.688415  5870 net.cpp:313] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0620 14:20:45.689630  5870 net.cpp:49] Initializing net from parameters: 
name: "ResNet"
state {
  phase: TRAIN
}
layer {
  name: "resnet"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "/home/takeki/caffe/examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "/home/takeki/caffe/examples/cifar10/cifar10_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn_a_1_1"
  type: "BatchNorm"
  bottom: "conv0"
  top: "bn_a_1_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_a_1_1"
  type: "Scale"
  bottom: "bn_a_1_1"
  top: "sc_a_1_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_a_1_1"
  type: "ReLU"
  bottom: "sc_a_1_1"
  top: "relu_a_1_1"
}
layer {
  name: "conv_a_1_1"
  type: "Convolution"
  bottom: "relu_a_1_1"
  top: "conv_a_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn_a_1_2"
  type: "BatchNorm"
  bottom: "conv_a_1_1"
  top: "bn_a_1_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_a_1_2"
  type: "Scale"
  bottom: "bn_a_1_2"
  top: "sc_a_1_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_a_1_2"
  type: "ReLU"
  bottom: "sc_a_1_2"
  top: "relu_a_1_2"
}
layer {
  name: "conv_a_1_2"
  type: "Convolution"
  bottom: "relu_a_1_2"
  top: "conv_a_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "res_a"
  type: "Convolution"
  bottom: "conv0"
  top: "res_a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "elt_a_1"
  type: "Eltwise"
  bottom: "res_a"
  bottom: "conv_a_1_2"
  top: "elt_a_1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "bn_b_1_1"
  type: "BatchNorm"
  bottom: "conv0"
  top: "bn_b_1_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_b_1_1"
  type: "Scale"
  bottom: "bn_b_1_1"
  top: "sc_b_1_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_b_1_1"
  type: "ReLU"
  bottom: "sc_b_1_1"
  top: "relu_b_1_1"
}
layer {
  name: "conv_b_1_1"
  type: "Convolution"
  bottom: "relu_b_1_1"
  top: "conv_b_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn_b_1_2"
  type: "BatchNorm"
  bottom: "conv_b_1_1"
  top: "bn_b_1_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_b_1_2"
  type: "Scale"
  bottom: "bn_b_1_2"
  top: "sc_b_1_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_b_1_2"
  type: "ReLU"
  bottom: "sc_b_1_2"
  top: "relu_b_1_2"
}
layer {
  name: "conv_b_1_2"
  type: "Convolution"
  bottom: "relu_b_1_2"
  top: "conv_b_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "res_b"
  type: "Convolution"
  bottom: "conv0"
  top: "res_b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "elt_b_1"
  type: "Eltwise"
  bottom: "res_b"
  bottom: "conv_b_1_2"
  top: "elt_b_1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "bn_c_1_1"
  type: "BatchNorm"
  bottom: "conv0"
  top: "bn_c_1_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_c_1_1"
  type: "Scale"
  bottom: "bn_c_1_1"
  top: "sc_c_1_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_c_1_1"
  type: "ReLU"
  bottom: "sc_c_1_1"
  top: "relu_c_1_1"
}
layer {
  name: "conv_c_1_1"
  type: "Convolution"
  bottom: "relu_c_1_1"
  top: "conv_c_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn_c_1_2"
  type: "BatchNorm"
  bottom: "conv_c_1_1"
  top: "bn_c_1_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_c_1_2"
  type: "Scale"
  bottom: "bn_c_1_2"
  top: "sc_c_1_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_c_1_2"
  type: "ReLU"
  bottom: "sc_c_1_2"
  top: "relu_c_1_2"
}
layer {
  name: "conv_c_1_2"
  type: "Convolution"
  bottom: "relu_c_1_2"
  top: "conv_c_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "res_c"
  type: "Convolution"
  bottom: "conv0"
  top: "res_c"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "elt_c_1"
  type: "Eltwise"
  bottom: "res_c"
  bottom: "conv_c_1_2"
  top: "elt_c_1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "bn_d_1_1"
  type: "BatchNorm"
  bottom: "elt_a_1"
  top: "bn_d_1_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_d_1_1"
  type: "Scale"
  bottom: "bn_d_1_1"
  top: "sc_d_1_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_d_1_1"
  type: "ReLU"
  bottom: "sc_d_1_1"
  top: "relu_d_1_1"
}
layer {
  name: "conv_d_1_1"
  type: "Convolution"
  bottom: "relu_d_1_1"
  top: "conv_d_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn_d_1_2"
  type: "BatchNorm"
  bottom: "conv_d_1_1"
  top: "bn_d_1_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_d_1_2"
  type: "Scale"
  bottom: "bn_d_1_2"
  top: "sc_d_1_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_d_1_2"
  type: "ReLU"
  bottom: "sc_d_1_2"
  top: "relu_d_1_2"
}
layer {
  name: "conv_d_1_2"
  type: "Convolution"
  bottom: "relu_d_1_2"
  top: "conv_d_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "res_d"
  type: "Convolution"
  bottom: "elt_a_1"
  top: "res_d"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "elt_d_1"
  type: "Eltwise"
  bottom: "res_d"
  bottom: "conv_d_1_2"
  top: "elt_d_1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "bn_f_1_1"
  type: "BatchNorm"
  bottom: "elt_b_1"
  top: "bn_f_1_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_f_1_1"
  type: "Scale"
  bottom: "bn_f_1_1"
  top: "sc_f_1_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_f_1_1"
  type: "ReLU"
  bottom: "sc_f_1_1"
  top: "relu_f_1_1"
}
layer {
  name: "conv_f_1_1"
  type: "Convolution"
  bottom: "relu_f_1_1"
  top: "conv_f_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn_f_1_2"
  type: "BatchNorm"
  bottom: "conv_f_1_1"
  top: "bn_f_1_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_f_1_2"
  type: "Scale"
  bottom: "bn_f_1_2"
  top: "sc_f_1_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_f_1_2"
  type: "ReLU"
  bottom: "sc_f_1_2"
  top: "relu_f_1_2"
}
layer {
  name: "conv_f_1_2"
  type: "Convolution"
  bottom: "relu_f_1_2"
  top: "conv_f_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "res_f"
  type: "Convolution"
  bottom: "elt_b_1"
  top: "res_f"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "elt_f_1"
  type: "Eltwise"
  bottom: "res_f"
  bottom: "conv_f_1_2"
  top: "elt_f_1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "bn_g_1_1"
  type: "BatchNorm"
  bottom: "elt_b_1"
  top: "bn_g_1_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_g_1_1"
  type: "Scale"
  bottom: "bn_g_1_1"
  top: "sc_g_1_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_g_1_1"
  type: "ReLU"
  bottom: "sc_g_1_1"
  top: "relu_g_1_1"
}
layer {
  name: "conv_g_1_1"
  type: "Convolution"
  bottom: "relu_g_1_1"
  top: "conv_g_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn_g_1_2"
  type: "BatchNorm"
  bottom: "conv_g_1_1"
  top: "bn_g_1_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_g_1_2"
  type: "Scale"
  bottom: "bn_g_1_2"
  top: "sc_g_1_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_g_1_2"
  type: "ReLU"
  bottom: "sc_g_1_2"
  top: "relu_g_1_2"
}
layer {
  name: "conv_g_1_2"
  type: "Convolution"
  bottom: "relu_g_1_2"
  top: "conv_g_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "res_g"
  type: "Convolution"
  bottom: "elt_b_1"
  top: "res_g"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "elt_g_1"
  type: "Eltwise"
  bottom: "res_g"
  bottom: "conv_g_1_2"
  top: "elt_g_1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "bn_h_1_1"
  type: "BatchNorm"
  bottom: "elt_c_1"
  top: "bn_h_1_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_h_1_1"
  type: "Scale"
  bottom: "bn_h_1_1"
  top: "sc_h_1_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_h_1_1"
  type: "ReLU"
  bottom: "sc_h_1_1"
  top: "relu_h_1_1"
}
layer {
  name: "conv_h_1_1"
  type: "Convolution"
  bottom: "relu_h_1_1"
  top: "conv_h_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn_h_1_2"
  type: "BatchNorm"
  bottom: "conv_h_1_1"
  top: "bn_h_1_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_h_1_2"
  type: "Scale"
  bottom: "bn_h_1_2"
  top: "sc_h_1_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_h_1_2"
  type: "ReLU"
  bottom: "sc_h_1_2"
  top: "relu_h_1_2"
}
layer {
  name: "conv_h_1_2"
  type: "Convolution"
  bottom: "relu_h_1_2"
  top: "conv_h_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "res_h"
  type: "Convolution"
  bottom: "elt_c_1"
  top: "res_h"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "elt_h_1"
  type: "Eltwise"
  bottom: "res_h"
  bottom: "conv_h_1_2"
  top: "elt_h_1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "bn_i_1_1"
  type: "BatchNorm"
  bottom: "elt_c_1"
  top: "bn_i_1_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_i_1_1"
  type: "Scale"
  bottom: "bn_i_1_1"
  top: "sc_i_1_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_i_1_1"
  type: "ReLU"
  bottom: "sc_i_1_1"
  top: "relu_i_1_1"
}
layer {
  name: "conv_i_1_1"
  type: "Convolution"
  bottom: "relu_i_1_1"
  top: "conv_i_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn_i_1_2"
  type: "BatchNorm"
  bottom: "conv_i_1_1"
  top: "bn_i_1_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_i_1_2"
  type: "Scale"
  bottom: "bn_i_1_2"
  top: "sc_i_1_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_i_1_2"
  type: "ReLU"
  bottom: "sc_i_1_2"
  top: "relu_i_1_2"
}
layer {
  name: "conv_i_1_2"
  type: "Convolution"
  bottom: "relu_i_1_2"
  top: "conv_i_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "res_i"
  type: "Convolution"
  bottom: "elt_c_1"
  top: "res_i"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "elt_i_1"
  type: "Eltwise"
  bottom: "res_i"
  bottom: "conv_i_1_2"
  top: "elt_i_1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "elt_d_f"
  type: "Eltwise"
  bottom: "elt_d_1"
  bottom: "elt_f_1"
  top: "elt_d_f"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "elt_g_i"
  type: "Eltwise"
  bottom: "elt_g_1"
  bottom: "elt_i_1"
  top: "elt_g_i"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "bn_j_1_1"
  type: "BatchNorm"
  bottom: "elt_d_f"
  top: "bn_j_1_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_j_1_1"
  type: "Scale"
  bottom: "bn_j_1_1"
  top: "sc_j_1_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_j_1_1"
  type: "ReLU"
  bottom: "sc_j_1_1"
  top: "relu_j_1_1"
}
layer {
  name: "conv_j_1_1"
  type: "Convolution"
  bottom: "relu_j_1_1"
  top: "conv_j_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn_j_1_2"
  type: "BatchNorm"
  bottom: "conv_j_1_1"
  top: "bn_j_1_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_j_1_2"
  type: "Scale"
  bottom: "bn_j_1_2"
  top: "sc_j_1_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_j_1_2"
  type: "ReLU"
  bottom: "sc_j_1_2"
  top: "relu_j_1_2"
}
layer {
  name: "conv_j_1_2"
  type: "Convolution"
  bottom: "relu_j_1_2"
  top: "conv_j_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "res_j"
  type: "Convolution"
  bottom: "elt_d_f"
  top: "res_j"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "elt_j_1"
  type: "Eltwise"
  bottom: "res_j"
  bottom: "conv_j_1_2"
  top: "elt_j_1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "bn_e_1_1"
  type: "BatchNorm"
  bottom: "elt_a_1"
  top: "bn_e_1_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_e_1_1"
  type: "Scale"
  bottom: "bn_e_1_1"
  top: "sc_e_1_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_e_1_1"
  type: "ReLU"
  bottom: "sc_e_1_1"
  top: "relu_e_1_1"
}
layer {
  name: "conv_e_1_1"
  type: "Convolution"
  bottom: "relu_e_1_1"
  top: "conv_e_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn_e_1_2"
  type: "BatchNorm"
  bottom: "conv_e_1_1"
  top: "bn_e_1_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_e_1_2"
  type: "Scale"
  bottom: "bn_e_1_2"
  top: "sc_e_1_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_e_1_2"
  type: "ReLU"
  bottom: "sc_e_1_2"
  top: "relu_e_1_2"
}
layer {
  name: "conv_e_1_2"
  type: "Convolution"
  bottom: "relu_e_1_2"
  top: "conv_e_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "res_e"
  type: "Convolution"
  bottom: "elt_a_1"
  top: "res_e"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "elt_e_1"
  type: "Eltwise"
  bottom: "res_e"
  bottom: "conv_e_1_2"
  top: "elt_e_1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "elt_e_h"
  type: "Eltwise"
  bottom: "elt_e_1"
  bottom: "elt_h_1"
  top: "elt_e_h"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "bn_k_1_1"
  type: "BatchNorm"
  bottom: "elt_e_h"
  top: "bn_k_1_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_k_1_1"
  type: "Scale"
  bottom: "bn_k_1_1"
  top: "sc_k_1_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_k_1_1"
  type: "ReLU"
  bottom: "sc_k_1_1"
  top: "relu_k_1_1"
}
layer {
  name: "conv_k_1_1"
  type: "Convolution"
  bottom: "relu_k_1_1"
  top: "conv_k_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn_k_1_2"
  type: "BatchNorm"
  bottom: "conv_k_1_1"
  top: "bn_k_1_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_k_1_2"
  type: "Scale"
  bottom: "bn_k_1_2"
  top: "sc_k_1_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_k_1_2"
  type: "ReLU"
  bottom: "sc_k_1_2"
  top: "relu_k_1_2"
}
layer {
  name: "conv_k_1_2"
  type: "Convolution"
  bottom: "relu_k_1_2"
  top: "conv_k_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "res_k"
  type: "Convolution"
  bottom: "elt_e_h"
  top: "res_k"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "elt_k_1"
  type: "Eltwise"
  bottom: "res_k"
  bottom: "conv_k_1_2"
  top: "elt_k_1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "bn_l_1_1"
  type: "BatchNorm"
  bottom: "elt_g_i"
  top: "bn_l_1_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_l_1_1"
  type: "Scale"
  bottom: "bn_l_1_1"
  top: "sc_l_1_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_l_1_1"
  type: "ReLU"
  bottom: "sc_l_1_1"
  top: "relu_l_1_1"
}
layer {
  name: "conv_l_1_1"
  type: "Convolution"
  bottom: "relu_l_1_1"
  top: "conv_l_1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "bn_l_1_2"
  type: "BatchNorm"
  bottom: "conv_l_1_1"
  top: "bn_l_1_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_l_1_2"
  type: "Scale"
  bottom: "bn_l_1_2"
  top: "sc_l_1_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_l_1_2"
  type: "ReLU"
  bottom: "sc_l_1_2"
  top: "relu_l_1_2"
}
layer {
  name: "conv_l_1_2"
  type: "Convolution"
  bottom: "relu_l_1_2"
  top: "conv_l_1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "res_l"
  type: "Convolution"
  bottom: "elt_g_i"
  top: "res_l"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "elt_l_1"
  type: "Eltwise"
  bottom: "res_l"
  bottom: "conv_l_1_2"
  top: "elt_l_1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "elt_j_k_l"
  type: "Eltwise"
  bottom: "elt_j_1"
  bottom: "elt_k_1"
  bottom: "elt_l_1"
  top: "elt_j_k_l"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "bn_m_1_1"
  type: "BatchNorm"
  bottom: "elt_j_k_l"
  top: "bn_m_1_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "sc_m_1_1"
  type: "Scale"
  bottom: "bn_m_1_1"
  top: "sc_m_1_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu_m_1_1"
  type: "ReLU"
  bottom: "sc_m_1_1"
  top: "relu_m_1_1"
}
layer {
  name: "gap"
  type: "Pooling"
  bottom: "relu_m_1_1"
  top: "gap"
  pooling_param {
    pool: AVE
    kernel_size: 8
    stride: 1
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "gap"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0620 14:20:45.695721  5870 layer_factory.hpp:77] Creating layer resnet
F0620 14:20:45.705333  5870 internal_thread.cpp:26] Check failed: error == cudaSuccess (38 vs. 0)  no CUDA-capable device is detected
*** Check failure stack trace: ***
    @     0x7fbbd5e33daa  (unknown)
    @     0x7fbbd5e33ce4  (unknown)
    @     0x7fbbd5e336e6  (unknown)
    @     0x7fbbd5e36687  (unknown)
    @     0x7fbbd645a309  caffe::InternalThread::StartInternalThread()
    @     0x7fbbd644a4de  caffe::DataReader::Body::Body()
    @     0x7fbbd644a71f  caffe::DataReader::DataReader()
    @     0x7fbbd64b972b  caffe::DataLayer<>::DataLayer()
    @     0x7fbbd64b9772  caffe::Creator_DataLayer<>()
    @     0x7fbbd653dab4  caffe::LayerRegistry<>::CreateLayer()
    @     0x7fbbd657bfae  caffe::Net<>::Init()
    @     0x7fbbd657e178  caffe::Net<>::Net()
    @     0x7fbbd658c21a  caffe::Solver<>::InitTrainNet()
    @     0x7fbbd658d7b2  caffe::Solver<>::Init()
    @     0x7fbbd658db0a  caffe::Solver<>::Solver()
    @     0x7fbbd65ae503  caffe::Creator_SGDSolver<>()
    @           0x40dbec  caffe::SolverRegistry<>::CreateSolver()
    @           0x408662  train()
    @           0x4059c3  main
    @     0x7fbbd5132f45  (unknown)
    @           0x40616c  (unknown)
    @              (nil)  (unknown)
Aborted (core dumped)
